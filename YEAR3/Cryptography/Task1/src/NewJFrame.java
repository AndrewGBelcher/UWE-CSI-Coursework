/**
 * @title TASK 1: ISBN + CREDIT CARD verifier
 * @author Andrew Belcher
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("verify ISBN");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("verify CC#");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Clear");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("ISBN #");

        jLabel2.setText("Credit Card #");

        jButton4.setText("run methods");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(69, 69, 69))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addGap(49, 49, 49))
            .addGroup(layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(49, 49, 49)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton4)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * verifies the ISBN number in the 1st text field
     */
    private void ISBN_handler()
    {
        int[] d = new int[16];
        String s;
        
        int result = 0;
        int errorchk = 0;
        
        jTextArea1.setText("");
        
        s = jTextField1.getText();
                        
        if(s.length() != 10)
        {
            jTextArea1.setText("Please enter a 10 digit number"); 
            return;
        }
        
        for (int i = 0; i < 9; i++) 
        {
            d[i] = Integer.parseInt(String.valueOf(s.charAt(i)));
            
            if(i < 9)
                result += d[i] * (i+1);
        }

        if(s.charAt(9) == 'x')
            errorchk = 10;
        else
            errorchk = Integer.parseInt(String.valueOf(s.charAt(9)));

                
        // debug outputs
        System.out.println(result);
        System.out.println("error chk is: "+errorchk);
        System.out.println("Mod is:"+Integer.toString(result%11)+" result is: "+Integer.toString(result));
        
        
        if(result%11 != errorchk)
        {
            jTextArea1.setText("INVALID ISBN!");   
        }
        else
        {
            jTextArea1.setText("VALID ISBN!");           
        }
    }
    
    /**
     * verifies credit card number in the 2nd text field
     */
    private void credit_card_handler()
    {
        String s; // cc string
        int[] d = new int[20]; // cc parsed int array
        int result = 0; // error checking temp value

        // clear output and pull in cc string
        jTextArea1.setText("");
        s = jTextField2.getText();
        
        // bounds checking
        if(s.length() != 16)
        {
            jTextArea1.setText("Please enter a 16 digit number");   
            return;
        }
            
        // for each number in cc# parse to int array and verify
        for (int i = 0; i < 16; i++) 
        {
            int tmp; 
            
            d[i] = Integer.parseInt(String.valueOf(s.charAt(i)));
            
            if(i%2!=0)
                tmp = d[i];
            else
                tmp = d[i]*2;
            
            // wrap value back around
            if(tmp >= 10)
                tmp -= 9;
            
            // gather sum of all cc numbers
            result += tmp;
           
        }
        
        System.out.println("mod of result is: "+result%10);
        
        // only valid if end result is divisible by 10 with no remainder
        if(result%10 == 0)
        {
            jTextArea1.setText("VALID CC #!");   
        }
        else
        {
            jTextArea1.setText("INVALID CC #!");           
        }
    }
    
    /**
     * invert a number with regards to modulo
     * @param a any number
     * @param n the modulo value
     * @return the result
     */
    public int inverse(int a, int n) 
    { 
        int t = 0; 
        int newt = 1; 
        int r = n; 
        int newr = a;    
        int q, temp = 0;  
        
        while(newr != 0) 
        { 
                q = r / newr;  /* integer division */        
                temp = newt;   /* remember newt    */
                newt = t - q*newt;
                
                t = temp;
                temp = newr;   /* remember newr    */
                newr = r - q*newr;
                
                r = temp;
        } 
        if(r > 1) 
            return -1; /* not invertible */
        if(t < 0) 
            t = t + n; /* change to positive */
        
        return t;
    }
    
   /**
    * add both numbers and modulo 11
    * @param x any number
    * @param y any number
    * @return result of adding both numbers modulo 11
    */
   public int mod11_add(int x, int y)
   {
       return ((((x+y)%11)+11)%11);
   }
   
   
   
   /**
    * multiply both numbers and modulo 11
    * @param x any number
    * @param y any number
    * @return result of multiply both numbers modulo 11
    */
    public int mod11_mul(int x, int y)
   {
    //   ((((a)%(mod))+(mod))%(mod))
       return ((((x*y)%11)+11)%11);
   }
    
    
    
    /**
     * multiply both numbers and invert with modulo 11
     * @param x any number
     * @param y any number
     * @return result of multiply both numbers inverted modulo 11
     */  
    public int mod11_inv(int x, int y)
   {
       
       //(a/b) * b + a%b
        int a = ((x*y)%11);
        
        if(a < 0)
        {
             int p = 0;
             while(inverse(p,11)!=(inverse(a,11)))p++;
             return p;
        }        
        else
            return a;

   }
    
    /**
     * display results of all 3 mod functions with test values
     */
    private void method_results()
    {
        jTextArea2.setText("add: " + mod11_add(-3,8) + "\n" +
                            "multiply: " + mod11_mul(-3,8) + "\n" + 
                            "invert: " + mod11_inv(-3,8));
    }
    
    /**
     * clear text fields and text areas on user interface
     */
    private void clear_ui()
    {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextArea1.setText("");
    }
    
    /**
     * ISBN button event handler
     * @param evt 
     */
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        ISBN_handler();
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * clear button event handler
     * @param evt 
     */
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        clear_ui();
    }//GEN-LAST:event_jButton3MouseClicked

    /**
     * credit card verify button handler
     * @param evt 
     */
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        credit_card_handler();
    }//GEN-LAST:event_jButton2MouseClicked

   /**
    * method calculation button handler
    * @param evt 
    */
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        method_results();
    }//GEN-LAST:event_jButton4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
